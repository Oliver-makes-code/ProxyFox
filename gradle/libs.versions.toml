[versions]
guava = "31.1-jre"
logback = "1.2.11"
kord = "0.8.0-M17"
kotlin = "1.7.21"
kotlinx_coroutines = "1.6.4"

# ProxyFox Libraries
proxyfox_command = "1.7"
pluralkt = "1.8"
markt = "1.0"

# Database
postgres = "42.3.3"
kjdbc = "0.5.2"
kmongo = "4.6.0"
kotlinx_datetime = "0.4.0"

# API
ktor = "2.1.3"

# Testing
testng = "7.6.1"
mockk = "1.+"

# Plugins
shadow = "7.1.2"
licenser = "1.2.0"

[libraries]
guava = { module = "com.google.guava:guava", version.ref = "guava" }
kord = { module = "dev.kord:kord-core", version.ref = "kord" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

proxyfox_command = { module = "dev.proxyfox:proxyfox-command", version.ref = "proxyfox_command" }
pluralkt = { module = "dev.proxyfox:pluralkt", version.ref = "pluralkt" }
markt = { module = "dev.proxyfox:MarKt", version.ref = "markt" }

kotlin_stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx_coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx_coroutines" }

kjdbc = { module = "com.vladsch.kotlin-jdbc:kotlin-jdbc", version.ref = "kjdbc" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
kmongo_base = { module = "org.litote.kmongo:kmongo-serialization", version.ref = "kmongo" }
kmongo_coroutine = { module = "org.litote.kmongo:kmongo-coroutine-serialization", version.ref = "kmongo" }
kmongo_async = { module = "org.litote.kmongo:kmongo-async-serialization", version.ref = "kmongo" }
kotlinx_datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx_datetime" }

ktor_server = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor_server_netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor_content_negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor_serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

testng = { module = "org.testng:testng", version.ref = "testng" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
kotlinx_coroutines_test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx_coroutines" }

[bundles]
base = ["guava", "logback", "kotlin_stdlib", "kotlinx_coroutines_core", "kord", "proxyfox_command", "pluralkt", "markt"]
database = ["kmongo_base", "kmongo_coroutine", "kmongo_async", "kotlinx_datetime"]
api = ["ktor_server", "ktor_server_netty", "ktor_content_negotiation", "ktor_serialization"]
test = ["testng", "kotlinx_coroutines_test", "mockk"]

[plugins]
kotlin_jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
licenser = { id = "org.quiltmc.gradle.licenser", version.ref = "licenser" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }